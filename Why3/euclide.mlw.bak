(* Euclidean division *)

module Euclide

  use import int.Int
  use import ref.Ref

  val x : ref int
  val y : ref int
  val q : ref int
  val r : ref int

  let euclide ()
    requires { !x >= 0 /\ !y >= 0 }
    ensures { !x = !q * !y + !r /\ 0 <= !r < !y }
  =
   q := 0; r := !x;
   while !r >= !y do
      invariant { !x = !q * !y + !r /\ 0 <= !r /\ !y > 0 }
      variant { !r }
      r := !r - !y; q := !q + 1
   done

  let test () =
    x := 42; y := 17; euclide(); (!q,!r)
    (* run test using "why3 execute imp_euclide.mlw Euclide.test" *)


end

(*
Local Variables:
compile-command: "why3 ide imp_euclide_sol.mlw"
End:
*)